agg = rbind(agg, agg_r %>%  dplyr::select(-random_users))])
agg = cvdt_stretches %>% dplyr::filter(user_id %in% user_ids) %>%
group_by(user_id) %>% dplyr::summarize_each(funs = c("mean","sd", "min"), duration, timing, variability, cyclicity)
cvdt_stretches$random_users = sample(cvdt_stretches$user_id)
agg_r = cvdt_stretches %>% dplyr::filter(user_id %in% user_ids) %>%
mutate(random_users = sample(user_id)) %>%
group_by(random_users) %>% dplyr::summarize_each(funs = c("mean","sd", "min"), duration, timing, variability, cyclicity)
agg$label = "actual users"
agg_r$label = "randomized users"
agg_r$user_id = agg_r$random_users
agg = rbind(agg, agg_r %>%  dplyr::select(-random_users))
table(agg$label[agg$cyclicity_min >= 0.3])
agg = cvdt_stretches %>%  dplyr::select(stretch_id, user_id) %>%
group_by(user_id) %>% dplyr::summarise(n = n(), min_cyclicity = min(cyclicity))
colnames(cvdt_stretches)
agg = cvdt_stretches %>%  dplyr::select(stretch_id, user_id, cyclicity) %>%
group_by(user_id) %>% dplyr::summarise(n = n(), min_cyclicity = min(cyclicity))
user_ids = agg$user_id[agg$n >= 5]
hist(agg$min_cyclicity)
cyclicity_levels
user_ids = agg$user_id[(agg$n >= 5) & (agg$min_cyclicity >= 0.3)]
agg = cvdt_stretches %>% dplyr::filter(user_id %in% user_ids) %>%
group_by(user_id) %>% dplyr::summarize_each(funs = c("mean","sd"), duration, timing, variability, cyclicity)
cvdt_stretches$random_users = sample(cvdt_stretches$user_id)
agg_r = cvdt_stretches %>% dplyr::filter(user_id %in% user_ids) %>%
mutate(random_users = sample(user_id)) %>%
group_by(random_users) %>% dplyr::summarize_each(funs = c("mean","sd"), duration, timing, variability, cyclicity)
agg$label = "actual users"
agg_r$label = "randomized users"
agg_r$user_id = agg_r$random_users
agg = rbind(agg, agg_r %>%  dplyr::select(-random_users))
agg_long = agg %>% dplyr::select(user_id, label, contains("_sd")) %>%  tidyr::pivot_longer(contains("_sd"), names_to = "metric")
g = ggplot(agg_long, aes(x = value, col = label))
g + geom_freqpoly(position = "identity", alpha = 1)+
facet_wrap(metric ~ . , scales = "free")
g = ggplot(agg_long, aes(x = value, col = label))
g + geom_freqpoly(position = "identity", alpha = 1)+
facet_wrap(metric ~ . , scales = "free")
agg_long = agg %>% dplyr::select(user_id, label, duration_sd, timing_sd) %>%  tidyr::pivot_longer(contains("_sd"), names_to = "metric")
g = ggplot(agg_long, aes(x = value, col = label))
g + geom_freqpoly(position = "identity", alpha = 1)+
facet_wrap(metric ~ . , scales = "free")
sum((agg$label == "actual users") & (agg$duration_sd <2))
sum((agg$label == "actual users"))
sum((agg$label == "actual users") & (agg$duration_sd <2) & (agg$timing_sd <1.5))
1976/2338
head(d_wide_with_tracking)
length(user_ids)
agg = cvdt_stretches %>%  dplyr::select(stretch_id, user_id, cyclicity) %>%
group_by(user_id) %>% dplyr::summarise(n = n(), min_cyclicity = min(cyclicity))
user_ids = agg$user_id[(agg$min_cyclicity >= 0.5)]
length(user_ids)
dim(d_wide_with_tracking)
dd = d_wide_with_tracking %>% dplyr::filter(user_id %in% user_ids)
dim(dd)
colnames(dd)
mm = as.matrix(dd %>% dplyr::select(-user_id, -cycle_id_m))
head(mm)
D
par$D
head(apply(mm, 1, function(x) which(x == 1)[1]))
summary(warnings())
head(apply(mm, 1, function(x) min(which(x == 1))))
head(apply(mm, 1, function(x) max(which(x == 1))))
head(apply(mm, 1, function(x) sum((x>0)*(-par$D:par$Df)))))
head(apply(mm, 1, function(x) sum((x>0)*(-par$D:par$Df))))
head((-par$D:par$Df)[apply(mm, 1, function(x) min(which(x == 1)))])
head((-par$D:par$Df)[apply(mm, 1, function(x) max(which(x == 1)))])
head( apply(mm, 1, function(x) mean((x>0)*(-par$D:par$Df))))
apply(mm, 1, function(x) sum((x>0)*(-par$D:par$Df)))
head(apply(mm, 1, function(x) sum((x>0)*(-par$D:par$Df))))
mm[mm<0] = 0
head(rowSums(mm))
head(apply(mm, 1, function(x) sum((x>0)*(-par$D:par$Df))))
x = mm[1,]
x
(-par$D:par$Df)
(x>0)*(-par$D:par$Df)
weighted.mean(-par$D:par$Df,x)
patterns = dd %>% dplyr::select(user_id, cycle_id_m) %>%
mutate(onset = (-par$D:par$Df)[apply(mm, 1, function(x) min(which(x == 1)))],
offset = (-par$D:par$Df)[apply(mm, 1, function(x) max(which(x == 1)))],
timing = apply(mm, 1, function(x) weighted.mean(-par$D:par$Df,x)),
duration = rowSums(mm)
)
head(patterns)
head(patterns, 20)
agg = cvdt_stretches %>%  dplyr::select(stretch_id, user_id, cyclicity, variability) %>%
group_by(user_id) %>% dplyr::summarise(n = n(), min_cyclicity = min(cyclicity), min_variability = min(variability))
length(user_ids)
user_ids = agg$user_id[(agg$min_cyclicity >= 0.5) & (agg$min_variability >= 0.5)]
length(user_ids)
dd = d_wide_with_tracking %>% dplyr::filter(user_id %in% user_ids)
mm = as.matrix(dd %>% dplyr::select(-user_id, -cycle_id_m))
mm[mm<0] = 0
patterns = dd %>% dplyr::select(user_id, cycle_id_m) %>%
mutate(onset = (-par$D:par$Df)[apply(mm, 1, function(x) suppressWarnings(min(which(x == 1))))],
offset = (-par$D:par$Df)[apply(mm, 1, function(x) suppressWarnings(max(which(x == 1))))],
timing = apply(mm, 1, function(x) weighted.mean(-par$D:par$Df,x)),
duration = rowSums(mm)
)
summary(warnings())
head(patterns)
head(patterns,20)
dim(patterns)
length(unique(patterns$user_id))
agg = patterns %>% group_by(user_id) %>% summarize_each(funs = "sd", onset, offset, timing, duration, na.rm = TRUE)
?summarize_each
sd_no_na = function(x){sd(x, na.rm = TRUE)}
sd_no_na = function(x){sd(x, na.rm = TRUE)}
agg = patterns %>% group_by(user_id) %>% summarize_each(funs = "sd_no_na", onset, offset, timing, duration)
head(agg)
patterns %>%  dplyr::filter(user_id == "00011aa567f148fbe9ce35ccfc6562a495faa840")
sd(c(-5,2))
patterns %>%  dplyr::filter(user_id == "0036328cbb2933b314a42794cc845bba79a069ee")
2 0036328cbb2933b314a42794cc845bba79a069ee  3.16   2.27   1.54     5.51
sd(c(-10,-4,-7,-7,-12,-13,-10))
patterns$random_user = sample(patterns$user_id)
patterns$random_user = sample(patterns$user_id)
agg_r = patterns %>% group_by(random_user) %>% summarize_each(funs = "sd_no_na", onset, offset, timing, duration)
head(agg_r)
patterns$random_user = sample(patterns$user_id)
agg_r = patterns %>% dplyr::rename(user_id = random_user) %>% group_by(user_id) %>% summarize_each(funs = "sd_no_na", onset, offset, timing, duration)
patterns$random_user = sample(patterns$user_id)
agg_r = patterns %>% dplyr::select(-user_id) %>% dplyr::rename(user_id = random_user) %>%
group_by(user_id) %>% summarize_each(funs = "sd_no_na", onset, offset, timing, duration)
dim(agg_r)
head(agg_r)
dim(agg)
agg$label = "real users"
agg_r$label = "randomized users"
agg = rbind(agg, agg_r)
colnames(agg)
agg_long = agg %>%  tidyr::pivot_longer(-user_id, label, names_to = "metric")
dim(agg)
head(agg)
agg_long = agg %>%  tidyr::pivot_longer(-user_id, -label, names_to = "metric")
agg_long = agg %>%  tidyr::pivot_longer(-c(user_id, label), names_to = "metric")
head(agg_long)
g = ggplot(agg_long, aes(x = value, col = label))
g + geom_freqpoly(position = "identity", alpha = 1)+
facet_wrap(metric ~ . , scales = "free")
agg = cvdt_stretches %>%  dplyr::select(stretch_id, user_id, cyclicity, variability) %>%
group_by(user_id) %>% dplyr::summarise(n = n(), min_cyclicity = min(cyclicity), min_variability = min(variability))
user_ids = agg$user_id[(agg$min_cyclicity >= 0.5) & (agg$min_variability >= 0.7)]
dd = d_wide_with_tracking %>% dplyr::filter(user_id %in% user_ids)
mm = as.matrix(dd %>% dplyr::select(-user_id, -cycle_id_m))
mm[mm<0] = 0
patterns = dd %>% dplyr::select(user_id, cycle_id_m) %>%
mutate(onset = (-par$D:par$Df)[apply(mm, 1, function(x) suppressWarnings(min(which(x == 1))))],
offset = (-par$D:par$Df)[apply(mm, 1, function(x) suppressWarnings(max(which(x == 1))))],
timing = apply(mm, 1, function(x) weighted.mean(-par$D:par$Df,x)),
duration = rowSums(mm)
)
sd_no_na = function(x){sd(x, na.rm = TRUE)}
agg = patterns %>% group_by(user_id) %>% summarize_each(funs = "sd_no_na", onset, offset, timing, duration)
patterns$random_user = sample(patterns$user_id)
agg_r = patterns %>% dplyr::select(-user_id) %>% dplyr::rename(user_id = random_user) %>%
group_by(user_id) %>% summarize_each(funs = "sd_no_na", onset, offset, timing, duration)
agg$label = "real users"
agg_r$label = "randomized users"
agg = rbind(agg, agg_r)
agg_long = agg %>%  tidyr::pivot_longer(-c(user_id, label), names_to = "metric")
g = ggplot(agg_long, aes(x = value, col = label))
g + geom_freqpoly(position = "identity", alpha = 1)+
facet_wrap(metric ~ . , scales = "free")
agg = cvdt_stretches %>%  dplyr::select(stretch_id, user_id, cyclicity, variability) %>%
group_by(user_id) %>% dplyr::summarise(n = n(), min_cyclicity = min(cyclicity), min_variability = min(variability))
user_ids = agg$user_id[(agg$min_cyclicity >= 0.3) & (agg$min_variability >= 0.3)]
dd = d_wide_with_tracking %>% dplyr::filter(user_id %in% user_ids)
mm = as.matrix(dd %>% dplyr::select(-user_id, -cycle_id_m))
mm[mm<0] = 0
patterns = dd %>% dplyr::select(user_id, cycle_id_m) %>%
mutate(onset = (-par$D:par$Df)[apply(mm, 1, function(x) suppressWarnings(min(which(x == 1))))],
offset = (-par$D:par$Df)[apply(mm, 1, function(x) suppressWarnings(max(which(x == 1))))],
timing = apply(mm, 1, function(x) weighted.mean(-par$D:par$Df,x)),
duration = rowSums(mm)
)
sd_no_na = function(x){sd(x, na.rm = TRUE)}
agg = patterns %>% group_by(user_id) %>% summarize_each(funs = "sd_no_na", onset, offset, timing, duration)
patterns$random_user = sample(patterns$user_id)
agg_r = patterns %>% dplyr::select(-user_id) %>% dplyr::rename(user_id = random_user) %>%
group_by(user_id) %>% summarize_each(funs = "sd_no_na", onset, offset, timing, duration)
agg$label = "real users"
agg_r$label = "randomized users"
agg = rbind(agg, agg_r)
agg_long = agg %>%  tidyr::pivot_longer(-c(user_id, label), names_to = "metric")
g = ggplot(agg_long, aes(x = value, col = label))
g + geom_freqpoly(position = "identity", alpha = 1)+
facet_wrap(metric ~ . , scales = "free")
agg_a = patterns %>% group_by(user_id) %>% summarize_each(funs = "sd_no_na", onset, offset, timing, duration)
patterns$random_user = sample(patterns$user_id)
agg_r = patterns %>% dplyr::select(-user_id) %>% dplyr::rename(user_id = random_user) %>%
group_by(user_id) %>% summarize_each(funs = "sd_no_na", onset, offset, timing, duration)
agg_a$label = "actual users"
agg_r$label = "randomized users"
agg = rbind(agg_a, agg_r)
agg_long = agg %>%  tidyr::pivot_longer(-c(user_id, label), names_to = "metric")
g = ggplot(agg_long, aes(x = value, col = label))
g + geom_freqpoly(position = "identity", alpha = 1)+
facet_wrap(metric ~ . , scales = "free")
sum((agg_a$duration<=3.6) & (agg_a$onset <= 4) & (agg_a$offset <= 2.5) & (agg_a$timing <= 2.5))
sum((agg_a$duration<=3.6) & (agg_a$onset <= 4) & (agg_a$offset <= 2.5) & (agg_a$timing <= 2.5))
nrow(agg_a)
sum((agg_a$duration<=3.6) & (agg_a$onset <= 4) & (agg_a$offset <= 2.5) & (agg_a$timing <= 2.5)) / nrow(agg_a) * 100
g = ggplot(agg_long, aes(x = value, col = label))
g + geom_freqpoly(position = "identity", alpha = 1)+
facet_wrap(metric ~ . , scales = "free")
sum((agg_a$duration<=3.6) | (agg_a$onset <= 4) | (agg_a$offset <= 2.5) | (agg_a$timing <= 2.5)) / nrow(agg_a) * 100
sum((agg_a$duration<=3.6) ) / nrow(agg_a) * 100
sum((agg_a$duration<=3.6) & (agg_a$onset <= 4) ) / nrow(agg_a) * 100
sum((agg_a$duration<=3.6) & (agg_a$offset <= 2.5) ) / nrow(agg_a) * 100
sum((agg_a$duration<=3.6) & (agg_a$timing <= 2.5) ) / nrow(agg_a) * 100
sum((agg_a$onset <= 4) & (agg_a$offset <= 2.5) ) / nrow(agg_a) * 100
g = ggplot(agg_long, aes(x = value, col = label))
g + geom_freqpoly(position = "identity", alpha = 1)+
facet_wrap(metric ~ . , scales = "free")
sum((agg_a$onset <= 5) & (agg_a$offset <= 2.5) ) / nrow(agg_a) * 100
plot(agg_a$onset, agg_a$offset)
plot(agg_a$onset, agg_a$offset, pch = 16, cex = 0.5)
plot(agg_a$onset, agg_a$offset, pch = 16, cex = 0.1)
plot(agg_a$onset, agg_a$offset, pch = 16, cex = 0.2)
plot(agg_a$onset, agg_a$duration, pch = 16, cex = 0.2)
plot(agg_a$onset, agg_a$offset, pch = 16, cex = 0.2)
plot(agg_a$onset, agg_a$duration, pch = 16, cex = 0.2)
plot(agg_a$timing, agg_a$duration, pch = 16, cex = 0.2)
cor(agg_a$onset, agg_a$offset)
cor(agg_a$duration, agg_a$offset)
cor(agg_a$duration, agg_a$onset)
cor(agg_a$timing, agg_a$onset)
cor(agg_a$timing, agg_a$offset)
cor(agg_a$timing, agg_a$duration)
g = ggplot(agg_long, aes(x = value, col = label))
g + geom_freqpoly(position = "identity", alpha = 1)+
facet_wrap(metric ~ . , scales = "free")
g = ggplot(agg_long, aes(x = value, col = label))
g + geom_freqpoly(position = "identity", alpha = 1)+
facet_wrap(metric ~ . , scales = "free")
head(mm)
av_profile = sapply(1:ncol(mm),function(i) ave(mm[,i],by = dd$user_id, FUN = mean))
dim(av_profile)
dim(patterns)
i = 1
ave(mm[,i],by = dd$user_id, FUN = mean)
?aggregate
av_profile = sapply(1:ncol(mm),function(i) aggregate(mm[,i],by = dd$user_id, FUN = mean))
av_profile = sapply(1:ncol(mm),function(i) aggregate(mm[,i],by = list(user_id = dd$user_id), FUN = mean))
dim(av_profile)
i
aggregate(mm[,i],by = list(user_id = dd$user_id), FUN = mean)
head(av_profile)
av_profile = sapply(1:ncol(mm),function(i) aggregate(mm[,i],by = list(user_id = dd$user_id), FUN = mean)$x)
dim(av_profile)
dim(agg)
dim(agg_a)
head(av_profile)
av_profile_a = av_profile
av_profile_a = sapply(1:ncol(mm),function(i) aggregate(mm[,i],by = list(user_id = dd$user_id), FUN = mean)$x)
av_profile_r = sapply(1:ncol(mm),function(i) aggregate(mm[,i],by = list(user_id = patterns$random_user), FUN = mean)$x)
hist(av_profile_a)
hist(av_profile_r)
x = av_profile_a[1,]
x
mean(x )
weighted.mean(x, x>0)
hist(apply(av_profile_a, 1, function(x) weighted.mean(x, x>0)))
hist(apply(av_profile_r, 1, function(x) weighted.mean(x, x>0)))
hist(apply(av_profile_a, 1, function(x) weighted.mean(x, x>0)))
hist(apply(av_profile_r, 1, function(x) weighted.mean(x, x>0)), col = rgb(1,0,0,0.3), add = TRUE)
agg_r$consistency = apply(av_profile_r, 1, function(x) weighted.mean(x, x>0))
agg = rbind(agg_a, agg_r)
agg_a$consistency = apply(av_profile_a, 1, function(x) weighted.mean(x, x>0))
agg_r$consistency = apply(av_profile_r, 1, function(x) weighted.mean(x, x>0))
head(agg_a)
head(agg_r)
agg = rbind(agg_a, agg_r)
agg_long = agg %>%  tidyr::pivot_longer(-c(user_id, label), names_to = "metric")
g = ggplot(agg_long, aes(x = value, col = label))
g + geom_freqpoly(position = "identity", alpha = 1)+
facet_wrap(metric ~ . , scales = "free")
sum(agg_a$consistency>=0.35)
sum(agg_a$consistency>=0.35) / nrow(agg_a) * 100
g = ggplot(agg_long, aes(x = value, col = label))
g + geom_freqpoly(position = "identity", alpha = 1)+
facet_wrap(metric ~ . , scales = "free")
sum(agg_a$consistency>=0.35) / nrow(agg_a) * 100
sum( (agg_a$offset <= 2.5) ) / nrow(agg_a) * 100
head(cycles_m)
load(paste0(IO$output_data, "cycles.Rdata"))
g = ggplot(agg_long, aes(x = value, col = label))
g + geom_freqpoly(position = "identity", alpha = 1)+
facet_wrap(metric ~ . , scales = "free")
mean(agg_a$consistency)
mean(agg_r$consistency)
mean(agg_r$consistency, na.rm = TRUE)
mean(agg_a$duration)
mean(agg_r$duration)
4.139614/3.328604
0.3071001/0.2696553
mean(agg_r$timing)/mean(agg_a$timing)
mean(agg_r$timing, na.rm = TRUE)/mean(agg_a$timing, na.rm = TRUE)
mean(agg_r$duration, na.rm = TRUE)/mean(agg_a$duration, na.rm = TRUE)
mean(agg_r$offset, na.rm = TRUE)/mean(agg_a$offset, na.rm = TRUE)
mean(agg_r$onset, na.rm = TRUE)/mean(agg_a$onset, na.rm = TRUE)
agg_a$consistency = apply(av_profile_a, 1, function(x) weighted.mean(x, x))
agg_r$consistency = apply(av_profile_r, 1, function(x) weighted.mean(x, x))
agg = rbind(agg_a, agg_r)
agg_long = agg %>%  tidyr::pivot_longer(-c(user_id, label), names_to = "metric")
g = ggplot(agg_long, aes(x = value, col = label))
g + geom_freqpoly(position = "identity", alpha = 1)+
facet_wrap(metric ~ . , scales = "free")
mean(agg_a$consistency)/mean(agg_r$consistency)
mean(agg_a$consistency, na.rm = TRUE)/mean(agg_r$consistency, na.rm = TRUE)
g = ggplot(agg_long, aes(x = value, col = label))
g + geom_freqpoly(position = "identity", alpha = 1)+
facet_wrap(metric ~ . , scales = "free")
median(agg_a$consistency, na.rm = TRUE)/median(agg_r$consistency, na.rm = TRUE)
g = ggplot(agg_long, aes(x = value, col = label))
g + geom_freqpoly(position = "identity", alpha = 1)+
facet_wrap(metric ~ . , scales = "free")
g = ggplot(agg_long, aes(x = value, col = label))
g + geom_freqpoly(position = "identity", alpha = 1, bins = 50)+
facet_wrap(metric ~ . , scales = "free")
g = ggplot(agg_long, aes(x = value, col = label))
g + geom_freqpoly(position = "identity", alpha = 1, bins = 30)+
facet_wrap(metric ~ . , scales = "free")
mean(agg_a$consistency, na.rm = TRUE)/mean(agg_r$consistency, na.rm = TRUE)
mean(agg_a$offset, na.rm = TRUE)/mean(agg_r$offset, na.rm = TRUE)
mean(agg_a$onset, na.rm = TRUE)/mean(agg_r$onset, na.rm = TRUE)
mean(agg_a$duration, na.rm = TRUE)/mean(agg_r$duration, na.rm = TRUE)
mean(agg_a$timing, na.rm = TRUE)/mean(agg_r$timing, na.rm = TRUE)
mean(agg_r$offset, na.rm = TRUE)/mean(agg_a$offset, na.rm = TRUE)
mean(agg_r$onset, na.rm = TRUE)/mean(agg_a$onset, na.rm = TRUE)
mean(agg_r$duration, na.rm = TRUE)/mean(agg_a$duration, na.rm = TRUE)
mean(agg_r$timing, na.rm = TRUE)/mean(agg_a$timing, na.rm = TRUE)
tic()
df = data.frame()
for(i in 1:10){
patterns$random_user = sample(patterns$user_id)
agg_r = patterns %>% dplyr::select(-user_id) %>% dplyr::rename(user_id = random_user) %>%
group_by(user_id) %>% summarize_each(funs = "sd_no_na", onset, offset, timing, duration) %>%
mutate(label =  "randomized users")
av_profile_r = sapply(1:ncol(mm),function(i) aggregate(mm[,i],by = list(user_id = patterns$random_user), FUN = mean)$x)
agg_r$consistency = apply(av_profile_r, 1, function(x) weighted.mean(x, x))
df = rbind(df, data.frame(
f_consistency = mean(agg_a$consistency, na.rm = TRUE)/mean(agg_r$consistency, na.rm = TRUE)),
f_offset = mean(agg_r$offset, na.rm = TRUE)/mean(agg_a$offset, na.rm = TRUE),
f_onset = mean(agg_r$onset, na.rm = TRUE)/mean(agg_a$onset, na.rm = TRUE),
f_duration = mean(agg_r$duration, na.rm = TRUE)/mean(agg_a$duration, na.rm = TRUE),
f_timing = mean(agg_r$timing, na.rm = TRUE)/mean(agg_a$timing, na.rm = TRUE)
)
}
toc()
df
# bootstrap
tic()
df = data.frame()
for(i in 1:10){
patterns$random_user = sample(patterns$user_id)
agg_r = patterns %>% dplyr::select(-user_id) %>% dplyr::rename(user_id = random_user) %>%
group_by(user_id) %>% summarize_each(funs = "sd_no_na", onset, offset, timing, duration) %>%
mutate(label =  "randomized users")
av_profile_r = sapply(1:ncol(mm),function(i) aggregate(mm[,i],by = list(user_id = patterns$random_user), FUN = mean)$x)
agg_r$consistency = apply(av_profile_r, 1, function(x) weighted.mean(x, x))
df = rbind(df, data.frame(
f_consistency = mean(agg_a$consistency, na.rm = TRUE)/mean(agg_r$consistency, na.rm = TRUE),
f_offset = mean(agg_r$offset, na.rm = TRUE)/mean(agg_a$offset, na.rm = TRUE),
f_onset = mean(agg_r$onset, na.rm = TRUE)/mean(agg_a$onset, na.rm = TRUE),
f_duration = mean(agg_r$duration, na.rm = TRUE)/mean(agg_a$duration, na.rm = TRUE),
f_timing = mean(agg_r$timing, na.rm = TRUE)/mean(agg_a$timing, na.rm = TRUE)
))
}
toc()
df
36*10
36*10/60
tic()
df = data.frame()
for(i in 1:20){
patterns$random_user = sample(patterns$user_id)
agg_r = patterns %>% dplyr::select(-user_id) %>% dplyr::rename(user_id = random_user) %>%
group_by(user_id) %>% summarize_each(funs = "sd_no_na", onset, offset, timing, duration) %>%
mutate(label =  "randomized users")
av_profile_r = sapply(1:ncol(mm),function(i) aggregate(mm[,i],by = list(user_id = patterns$random_user), FUN = mean)$x)
agg_r$consistency = apply(av_profile_r, 1, function(x) weighted.mean(x, x))
df = rbind(df, data.frame(
f_consistency = mean(agg_a$consistency, na.rm = TRUE)/mean(agg_r$consistency, na.rm = TRUE),
f_offset = mean(agg_r$offset, na.rm = TRUE)/mean(agg_a$offset, na.rm = TRUE),
f_onset = mean(agg_r$onset, na.rm = TRUE)/mean(agg_a$onset, na.rm = TRUE),
f_duration = mean(agg_r$duration, na.rm = TRUE)/mean(agg_a$duration, na.rm = TRUE),
f_timing = mean(agg_r$timing, na.rm = TRUE)/mean(agg_a$timing, na.rm = TRUE)
))
}
toc()
summary(df)
sd(patterns$offset)
sd(patterns$offset, na.rm = TRUE)
mean(agg_a$offset)
mean(agg_r$offset)
mean(agg_r$offset, na.rm = TRUE)
sd(patterns$onset, na.rm = TRUE)
mean(agg_r$onset)
mean(agg_r$onset, na.rm = TRUE)
mean(agg_a$onset, na.rm = TRUE)
5.271134/4.01846
x = apply(mm, 2, mean)
x
weighted.mean(x,x)
mean(agg_a$consistency)
mean(agg_r$consistency)
# bootstrap
tic()
df = data.frame()
for(i in 1:20){
cat(i,"\t")
patterns$random_user = sample(patterns$user_id)
agg_r = patterns %>% dplyr::select(-user_id) %>% dplyr::rename(user_id = random_user) %>%
group_by(user_id) %>% summarize_each(funs = "sd_no_na", onset, offset, timing, duration) %>%
mutate(label =  "randomized users")
df = rbind(df, data.frame(
f_offset = mean(agg_r$offset, na.rm = TRUE)/mean(agg_a$offset, na.rm = TRUE),
f_onset = mean(agg_r$onset, na.rm = TRUE)/mean(agg_a$onset, na.rm = TRUE),
f_duration = mean(agg_r$duration, na.rm = TRUE)/mean(agg_a$duration, na.rm = TRUE),
f_timing = mean(agg_r$timing, na.rm = TRUE)/mean(agg_a$timing, na.rm = TRUE)
))
}
toc()
1/df
summary(1/df)
quantile(1/df, probs = c(0.025,0.975))
apply(1/df,2,quantile, probs = c(0.025,0.975))
quantile(as.matrix(1/df), probs = c(0.025,0.975))
quantile(as.matrix(1/df), probs = c(0.025,0.5,0.975))
10*5
# bootstrap
tic()
df = data.frame()
for(i in 1:100){
cat(i,"\t")
patterns$random_user = sample(patterns$user_id)
agg_r = patterns %>% dplyr::select(-user_id) %>% dplyr::rename(user_id = random_user) %>%
group_by(user_id) %>% summarize_each(funs = "sd_no_na", onset, offset, timing, duration) %>%
mutate(label =  "randomized users")
df = rbind(df, data.frame(
f_offset = mean(agg_r$offset, na.rm = TRUE)/mean(agg_a$offset, na.rm = TRUE),
f_onset = mean(agg_r$onset, na.rm = TRUE)/mean(agg_a$onset, na.rm = TRUE),
f_duration = mean(agg_r$duration, na.rm = TRUE)/mean(agg_a$duration, na.rm = TRUE),
f_timing = mean(agg_r$timing, na.rm = TRUE)/mean(agg_a$timing, na.rm = TRUE)
))
}
toc()
apply(1/df,2,quantile, probs = c(0.025,0.5,0.975))
quantile(as.matrix(1/df), probs = c(0.025,0.5,0.975))
head(patterns)
head(agg_a)
head(cycles)
patterns$cycle_length = cycles$cycle_length[match(patterns$cycle_id_m, cycles$cycle_id)]
summary(warnings())
head(patterns$cycle_length )
agg_tmp = patterns %>% group_by(user_id) %>% summarize(cycle_length_median = median(cycle_length),
cycle_length_mean = mean(cycle_length),
cycle_length_sd = sd(cycle_length))
agg_tmp
agg_tmp = patterns %>% group_by(user_id) %>% dplyr::summarize(cycle_length_median = median(cycle_length),
cycle_length_mean = mean(cycle_length),
cycle_length_sd = sd(cycle_length))
agg_tmp
A = merge(agg_a, agg_tmp, by = "user_id")
head(A)
cor_mat = A %>% dplyr::select(-user_id, -label) %>% cor()
cor_mat
library(ggcorrplot)
install.packages("ggcorrplot")
library(ggcorrplot)
ggcorrplot(corr, hc.order = TRUE, type = "lower",
outline.col = "white")
ggcorrplot(cor_mat, hc.order = TRUE, type = "lower",
outline.col = "white")
ggcorrplot(cor_mat, hc.order = TRUE,
type = "lower", p.mat = p.mat)
p.mat =  A %>% dplyr::select(-user_id, -label) %>% cor_pmat()
ggcorrplot(cor_mat, hc.order = TRUE,
type = "lower", p.mat = p.mat)
ggcorrplot(cor_mat, hc.order = TRUE, method = "circle"
type = "lower", p.mat = p.mat)
ggcorrplot(cor_mat, hc.order = TRUE, method = "circle",
type = "lower", p.mat = p.mat)
ggcorrplot(cor_mat, hc.order = TRUE, method = "circle", p.mat = p.mat)
cor_mat = patterns %>% dplyr::select(onset, offset, duration, timing, cycle_length)
mat = patterns %>% dplyr::select(onset, offset, duration, timing, cycle_length)
cor_mat = cor(mat)
p.mat =  cor_pmat(mat)
ggcorrplot(cor_mat, hc.order = TRUE, method = "circle", p.mat = p.mat)
ggcorrplot(cor_mat,  method = "circle", p.mat = p.mat)
mat = patterns %>% dplyr::select(onset, offset, duration, timing, cycle_length)
cor_mat = cor(mat)
p.mat =  cor_pmat(mat)
ggcorrplot(cor_mat,  method = "circle", p.mat = p.mat)
cor_mat
?co
?cor
cor_mat = cor(mat,use = "complete.obs")
p.mat =  cor_pmat(mat,use = "complete.obs")
ggcorrplot(cor_mat,  method = "circle", p.mat = p.mat)
cor
cor_mat
ggcorrplot(cor_mat[1,],  method = "circle", p.mat = p.mat)
agg_tmp = patterns %>% group_by(user_id) %>% dplyr::summarize(cycle_length_sd = sd(cycle_length))
A = merge(agg_a, agg_tmp, by = "user_id")
cor_mat = A %>% dplyr::select(-user_id, -label) %>% cor()
p.mat =  A %>% dplyr::select(-user_id, -label) %>% cor_pmat()
ggcorrplot(cor_mat, hc.order = TRUE, method = "circle", p.mat = p.mat)
