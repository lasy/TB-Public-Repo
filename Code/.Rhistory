which(tracking$user_id == "00147343bfdb6aff66efe58308b606d20959d8c4")
load(file = paste0(IO$input_data, 'tracking_filtered/ tracking_filtered_split_ah.Rdata'), verbose = TRUE)
which(tracking$user_id == "00147343bfdb6aff66efe58308b606d20959d8c4")
load(file = paste0(IO$input_data, 'tracking_filtered/ tracking_filtered_split_ai.Rdata'), verbose = TRUE)
which(tracking$user_id == "00147343bfdb6aff66efe58308b606d20959d8c4")
load(file = paste0(IO$input_data, 'tracking_filtered/ tracking_filtered_split_aj.Rdata'), verbose = TRUE)
which(tracking$user_id == "00147343bfdb6aff66efe58308b606d20959d8c4")
load(file = paste0(IO$input_data, 'tracking_filtered/ tracking_filtered_split_ak.Rdata'), verbose = TRUE)
which(tracking$user_id == "00147343bfdb6aff66efe58308b606d20959d8c4")
load(file = paste0(IO$input_data, 'tracking_filtered/ tracking_filtered_split_akl.Rdata'), verbose = TRUE)
load(file = paste0(IO$input_data, 'tracking_filtered/ tracking_filtered_split_al.Rdata'), verbose = TRUE)
which(tracking$user_id == "00147343bfdb6aff66efe58308b606d20959d8c4")
load(file = paste0(IO$input_data, 'tracking_filtered/ tracking_filtered_split_am.Rdata'), verbose = TRUE)
which(tracking$user_id == "00147343bfdb6aff66efe58308b606d20959d8c4")
load(file = paste0(IO$input_data, 'tracking_filtered/ tracking_filtered_split_an.Rdata'), verbose = TRUE)
which(tracking$user_id == "00147343bfdb6aff66efe58308b606d20959d8c4")
load(file = paste0(IO$input_data, 'tracking_filtered/ tracking_filtered_split_ao.Rdata'), verbose = TRUE)
which(tracking$user_id == "00147343bfdb6aff66efe58308b606d20959d8c4")
load(file = paste0(IO$input_data, 'tracking_filtered/ tracking_filtered_split_ap.Rdata'), verbose = TRUE)
load(file = paste0(IO$input_data, 'tracking_filtered/ tracking_filtered_split_cb.Rdata'), verbose = TRUE)
which(tracking$user_id == "00147343bfdb6aff66efe58308b606d20959d8c4")
load(file = paste0(IO$input_data, 'tracking_filtered/ tracking_filtered_split_cc.Rdata'), verbose = TRUE)
which(tracking$user_id == "00147343bfdb6aff66efe58308b606d20959d8c4")
load(file = paste0(IO$input_data, 'tracking_filtered/ tracking_filtered_split_cd.Rdata'), verbose = TRUE)
which(tracking$user_id == "00147343bfdb6aff66efe58308b606d20959d8c4")
load(file = paste0(IO$input_data, 'tracking_filtered/ tracking_filtered_split_ce.Rdata'), verbose = TRUE)
which(tracking$user_id == "00147343bfdb6aff66efe58308b606d20959d8c4")
load(file = paste0(IO$input_data, 'tracking_filtered/ tracking_filtered_split_cf.Rdata'), verbose = TRUE)
which(tracking$user_id == "00147343bfdb6aff66efe58308b606d20959d8c4")
load(file = paste0(IO$input_data, 'tracking_filtered/ tracking_filtered_split_cg.Rdata'), verbose = TRUE)
which(tracking$user_id == "00147343bfdb6aff66efe58308b606d20959d8c4")
load(file = paste0(IO$input_data, 'tracking_filtered/ tracking_filtered_split_ch.Rdata'), verbose = TRUE)
which(tracking$user_id == "00147343bfdb6aff66efe58308b606d20959d8c4")
load(file = paste0(IO$input_data, 'tracking_filtered/ tracking_filtered_split_ch.Rdata'), verbose = TRUE)
which(tracking$user_id == "00147343bfdb6aff66efe58308b606d20959d8c4")
IO$tmp_Rdata
file.copy(paste0(IO$output_data,"users.Rdata"), paste0(IO$tmp_data,"users_before_filtering_days.Rdata"))
IO$tmp_data = paste0(IO$r_Data, "tmp_Rdata/")
file.copy(paste0(IO$output_data,"users.Rdata"), paste0(IO$tmp_data,"users_before_filtering_days.Rdata"))
IO$tmp_data = paste0(IO$r_Data, "tmp_data/")
files=  list.files(paste0(IO$tmp_data, "tracking_raw_batches/"))
files
j = grep("_batch_1.Rdata", files)
files = files[j]
file = files[2]
cat(file,"\n")
load(file = paste0(IO$input_data, 'tracking_filtered/',file), verbose = TRUE)
load(file = paste0(IO$tmp_data, 'tracking_filtered/',file), verbose = TRUE)
load(file = paste0(IO$tmp_data, 'tracking_raw_batches/',file), verbose = TRUE)
for(file in files){
cat(file,"\n")
load(file = paste0(IO$tmp_data, 'tracking_raw_batches/',file), verbose = TRUE)
which(days$user_id == "00147343bfdb6aff66efe58308b606d20959d8c4")
}
for(file in files){
cat(file,"\n")
load(file = paste0(IO$tmp_data, 'tracking_raw_batches/',file), verbose = TRUE)
print(which(days$user_id == "00147343bfdb6aff66efe58308b606d20959d8c4"))
}
load(file = paste0(IO$input_data, 'tracking_filtered/ tracking_filtered_split_cq.Rdata'))
which(tracking$user_id == "00147343bfdb6aff66efe58308b606d20959d8c4")
load(file = paste0(IO$input_data, 'tracking_filtered/ tracking_filtered_split_cq.Rdata'))
which(tracking$user_id == "00147343bfdb6aff66efe58308b606d20959d8c4")
TRACKING = tracking[which(tracking$user_id == "00147343bfdb6aff66efe58308b606d20959d8c4"),]
load(file = paste0(IO$input_data, 'tracking_filtered/ tracking_filtered_split_cr.Rdata'))
which(tracking$user_id == "00147343bfdb6aff66efe58308b606d20959d8c4")
TRACKING = rbind(TRACKING, tracking[which(tracking$user_id == "00147343bfdb6aff66efe58308b606d20959d8c4"),])
TRACKING
head(d)
days_with_cycle_id[which(d)[1],]
TRACKING[TRACKING$date == "2017-06-04",]
load(file = paste0(IO$input_data, 'tracking_filtered/ tracking_filtered_split_cq.Rdata'))
which(tracking$user_id == "00147343bfdb6aff66efe58308b606d20959d8c4")
TRACKING = tracking[which(tracking$user_id == "00147343bfdb6aff66efe58308b606d20959d8c4"),]
TRACKING
load(file = paste0(IO$input_data, 'tracking_filtered/ tracking_filtered_split_cr.Rdata'))
which(tracking$user_id == "00147343bfdb6aff66efe58308b606d20959d8c4")
tracking[which(tracking$user_id == "00147343bfdb6aff66efe58308b606d20959d8c4"),]
TRACKING[TRACKING$date == "2017-06-04",]
load(file = paste0(IO$input_data, 'tracking_filtered/ tracking_filtered_split_cq.Rdata'))
which(tracking$user_id == "00147343bfdb6aff66efe58308b606d20959d8c4")
TRACKING = tracking[which(tracking$user_id == "00147343bfdb6aff66efe58308b606d20959d8c4"),]
load(file = paste0(IO$input_data, 'tracking_filtered/ tracking_filtered_split_cr.Rdata'))
which(tracking$user_id == "00147343bfdb6aff66efe58308b606d20959d8c4")
TRACKING = rbind(TRACKING, tracking[which(tracking$user_id == "00147343bfdb6aff66efe58308b606d20959d8c4"),])
TRACKING[TRACKING$date == "2017-06-04",]
TRACKING[TRACKING$date == "2017-06-04",]
par$Df
par$D
define_menstruation_centered_cycles = function(days = days, par = par){
# cycle id and cycle number
days$cycle_id_m = days$cycle_id
days$cycle_nb_m = days$cycle_nb
end.j = which(days$cycleday_from_end >= -par$D)
days$cycle_id_m[end.j] = paste0(days$user_id[end.j],"_",days$cycle_nb[end.j]+1)
days$cycle_nb_m[end.j] = days$cycle_nb[end.j]+1
rm(end.j)
# cycleday_m and cycleday_m_D
days$cycleday_m = days$cycleday-1
days$cycleday_m_D = NA
j.start = which((days$cycle_id_m == days$cycle_id) & (days$cycleday_m <= par$Df))
days$cycleday_m_D[j.start] = days$cycleday[j.start]-1
j.end = which(days$cycle_id_m != days$cycle_id)
days$cycleday_m[j.end] = days$cycleday_from_end[j.end]
days$cycleday_m_D[j.end] = days$cycleday_from_end[j.end]
rm(j.start, j.end)
# ignore what is before or after the first or last FULL cycle_id_m
# (i.e. we set to NA the start of the first cycle of a user
# and the end of the last cycle of a user)
agg = aggregate(cycle_nb ~ user_id, days, range)
agg$cycle_id_m1 = paste0(agg$user_id, "_",agg$cycle_nb[,1])
agg$cycle_id_m2 = paste0(agg$user_id, "_",agg$cycle_nb[,2]+1)
m1 = match(days$cycle_id_m, agg$cycle_id_m1)
days$cycle_id_m[!is.na(m1)] = NA
days$cycle_nb_m[!is.na(m1)] = NA
days$cycleday_m[!is.na(m1)] = NA
days$cycleday_m_D[!is.na(m1)] = NA
m2 = match(days$cycle_id_m, agg$cycle_id_m2)
days$cycle_id_m[!is.na(m2)] = NA
days$cycle_nb_m[!is.na(m2)] = NA
days$cycleday_m[!is.na(m2)] = NA
days$cycleday_m_D[!is.na(m2)] = NA
rm(agg, m1, m2)
return(days)
}
days_folder = paste0(IO$output_data,"days/")
tmp_days_folder = paste0(IO$tmp_data,"days_before_menstruation_centered_cycles/")
file.copy(days_folder, IO$tmp_data, recursive=TRUE)
file.rename(paste0(IO$tmp_data,"days"),tmp_days_folder)
clue_file_list = list.files(days_folder)
clue_file_list
par$N.files
rm(TRACKING, tracking, files, file, j)
files  = list.files(IO$input_data)
files
files  = list.files(paste0(IO$input_data,"tracking_filtered/"))
files
file = files[1]
file
substring(file, 2)
folder = paste0(IO$input_data,"tracking_filtered/")
files  = list.files(folder)
for(file in files){
cat(file, "\n")
file.rename(from = paste0(folder, file), to = paste0(folder, substring(file, 2)))
}
load(paste0(IO$output_data, "users.Rdata"), verbose = TRUE)
head(users)
unique(users$original_file)
foreach(filename = filenames) %dopar%
{
cat(filename,"\n")
load(paste0(days_folder, filename), verbose = TRUE)
# defining a unique identifier for each day of observation (user_id + date)
days$day_id = paste0(days$user_id, "_", days$date)
# counting the number of logs on that day
days_n_logs = aggregate(type ~ day_id, days, uniqueN)
# formating the dataframe
days_n_logs$number = days_n_logs$type
days_n_logs$type = "n_logs"
days_n_logs$category = "n_logs"
# making sure the new dataframe with the n_logs has the same # of columns and fill the missing ones with the same value as in the original table
m = match(days_n_logs$day_id, days$day_id)
cns = setdiff(colnames(days), colnames(days_n_logs))
for(cn in cns){eval(parse(text = paste0("days_n_logs$",cn," = days$",cn,"[m]")))}
rm(m, cn, cns)
# and re-ordering the columns to make sure they match
oc = match(colnames(days),colnames(days_n_logs))
days_n_logs = days_n_logs[,oc]; rm(oc)
# adding the n_logs
days = rbind(days, days_n_logs)
# sorting days
o = order(days$user_id, days$date)
days = days[o,]; rm(o)
save(days, file = paste0(days_folder, filename))
}
A = data.frame(id = c("a","a","b","c","c"), nb = 1:5)
A
aggregate(nb ~ id, A, paste0)
agg = aggregate(nb ~ id, A, paste0)
agg = aggregate(nb ~ id, A, paste0, collapse = ",")
agg
load(paste0(IO$output_data, "users.Rdata"), verbose = TRUE)
head(users)
load(paste0(IO$output_data, "users.Rdata"), verbose = TRUE)
head(users)
unique(users$original_files)
par$D
?uniqueN
c(-par$D : -1)
c(-7 : -1)
c(0:par$Df)
head(days)
unique(days$category)
unique(days$type[days$category == "sex"])
days_folder = paste0(IO$output_data,"days/")
filenames = list.files(days_folder)
filename = filenames[1]
cat(filename,"\n")
load(paste0(days_folder, filename), verbose = TRUE)
head(days)
load(paste0(days_folder, filenames[length(filenames)]), verbose = TRUE)
summary(days)
head(days)
TB
head(days)
unique(days$type[days$category == "fluid"])
unique(days$category)
unique(days$type[days$category == "bbt"])
unique(days$number[days$category == "bbt"])
days_folder = paste0(IO$output_data,"days/")
filenames = list.files(days_folder)
filenames
filename = filenames[1]
cat(filename,"\n")
load(paste0(days_folder, filename), verbose = TRUE)
head()
days_folder = paste0(IO$output_data,"days/")
clue_file_list = list.files(days_folder)
file = clue_file_list[1]
file
load(paste0(days_folder,file), verbose = TRUE)
head(days)
head(days[days$cycle_nb == 2, ])
head(days[days$cycle_nb == 2, ])
head(days[days$cycle_nb == 2, ])
source("Scripts/00_setup.R")
knitr::opts_chunk$set(echo = TRUE, cache = TRUE)
options(scipen=999)
load(paste0(IO$output_data, "users.Rdata"), verbose = TRUE)
head(users)
file.copy(paste0(IO$output_data, "cycles.Rdata"), paste0(IO$tmp_data, "cycles_before_cycles_agg.Rdata"))
load(paste0(IO$output_data, "cycles.Rdata"), verbose = TRUE)
head(cycles)
cycles$birth_control_CLUE = users$birth_control[match(cycles$user_id, users$user_id )]
head(cycles)
days_folder = paste0(IO$output_data,"days/")
filenames = list.files(days_folder)
filename = filenames[1]
cat(filename,"\n")
load(paste0(days_folder, filename), verbose = TRUE)
subdays = days[days$user_id %in% unique(days$user_id)[1:2],]
cycles_agg = ddply(subdays, .(cycle_id), summarize,
n_days_obs = lu(date),
last_obs_day = max(cycleday),
n_obs = sum(numbers * (type == "n_logs")),
n_days_obs_lut_D = lu(date * (cycleday_m_D %in% c(-par$D : -1))) - 1 ,
n_days_obs_lut_7 = lu(date * (cycleday_m_D %in% c(-7 : -1))) - 1,
n_days_obs_foll_Df = lu(date * (cycleday_m_D %in% c(0:par$Df))) - 1,
n_pill = sum(category == "pill_hbc"),
n_other_BC = sum(category %in% c("patch_hbc","ring_hbc","injection_hbc","iud")) ,
n_tot_sex = sum(type %in% c("withdrawal_sex","protected_sex","unprotected_sex")),
n_prot_sex = sum(type == "protected_sex"),
n_unprot_sex =  sum(type == "unprotected_sex"),
n_withdrawal =  sum(type == "withdrawal_sex"),
n_TB = sum(type == TB),
n_egg_white_fluid = sum(type %in% c("egg_white")),
n_BBT = sum((category == "bbt") & (!is.na(number)))
)
cycles_agg = ddply(subdays, .(cycle_id), summarize,
n_days_obs = lu(date),
last_obs_day = max(cycleday),
n_obs = sum(number * (type == "n_logs")),
n_days_obs_lut_D = lu(date * (cycleday_m_D %in% c(-par$D : -1))) - 1 ,
n_days_obs_lut_7 = lu(date * (cycleday_m_D %in% c(-7 : -1))) - 1,
n_days_obs_foll_Df = lu(date * (cycleday_m_D %in% c(0:par$Df))) - 1,
n_pill = sum(category == "pill_hbc"),
n_other_BC = sum(category %in% c("patch_hbc","ring_hbc","injection_hbc","iud")) ,
n_tot_sex = sum(type %in% c("withdrawal_sex","protected_sex","unprotected_sex")),
n_prot_sex = sum(type == "protected_sex"),
n_unprot_sex =  sum(type == "unprotected_sex"),
n_withdrawal =  sum(type == "withdrawal_sex"),
n_TB = sum(type == TB),
n_egg_white_fluid = sum(type %in% c("egg_white")),
n_BBT = sum((category == "bbt") & (!is.na(number)))
)
head(subdays)
cycles_agg = ddply(subdays, .(cycle_id), summarize,
n_days_obs = lu(date))
cycles_agg
cycles_agg = ddply(subdays, .(cycle_id), summarize,
n_days_obs = lu(date),
last_obs_day = max(cycleday))
cycles_agg
cycles_agg = ddply(subdays, .(cycle_id), summarize,
n_days_obs = lu(date),
last_obs_day = max(cycleday),
n_obs = sum(number * (type == "n_logs")))
cycles_agg
head(subdays)
test = ddply(subdays, .(cycle_id), summarize,
t = sum(type == "n_logs"))
test
test
test = ddply(subdays, .(cycle_id), summarize,
t = sum(numbers * (type == "n_logs"), na.rm = TRUE))
test = ddply(subdays, .(cycle_id), summarize,
t = sum(number * (type == "n_logs"), na.rm = TRUE))
test
cycles_agg = ddply(subdays, .(cycle_id), summarize,
n_days_obs = lu(date),
last_obs_day = max(cycleday),
n_obs = sum(number * (type == "n_logs"), na.rm = TRUE),
n_days_obs_lut_D = lu(date * (cycleday_m_D %in% c(-par$D : -1))) - 1 ,
n_days_obs_lut_7 = lu(date * (cycleday_m_D %in% c(-7 : -1))) - 1,
n_days_obs_foll_Df = lu(date * (cycleday_m_D %in% c(0:par$Df))) - 1,
n_pill = sum(category == "pill_hbc"),
n_other_BC = sum(category %in% c("patch_hbc","ring_hbc","injection_hbc","iud")) ,
n_tot_sex = sum(type %in% c("withdrawal_sex","protected_sex","unprotected_sex")),
n_prot_sex = sum(type == "protected_sex"),
n_unprot_sex =  sum(type == "unprotected_sex"),
n_withdrawal =  sum(type == "withdrawal_sex"),
n_TB = sum(type == TB),
n_egg_white_fluid = sum(type %in% c("egg_white")),
n_BBT = sum((category == "bbt") & (!is.na(number)))
)
cycles_agg = ddply(subdays, .(cycle_id), summarize,
n_days_obs = lu(date),
last_obs_day = max(cycleday),
n_obs = sum(number * (type == "n_logs"), na.rm = TRUE),
n_days_obs_lut_D = lu(cycleday * (cycleday_m_D %in% c(-par$D : -1))) - 1 ,
n_days_obs_lut_7 = lu(cycleday * (cycleday_m_D %in% c(-7 : -1))) - 1,
n_days_obs_foll_Df = lu(cycleday * (cycleday_m_D %in% c(0:par$Df))) - 1,
n_pill = sum(category == "pill_hbc"),
n_other_BC = sum(category %in% c("patch_hbc","ring_hbc","injection_hbc","iud")) ,
n_tot_sex = sum(type %in% c("withdrawal_sex","protected_sex","unprotected_sex")),
n_prot_sex = sum(type == "protected_sex"),
n_unprot_sex =  sum(type == "unprotected_sex"),
n_withdrawal =  sum(type == "withdrawal_sex"),
n_TB = sum(type == TB),
n_egg_white_fluid = sum(type %in% c("egg_white")),
n_BBT = sum((category == "bbt") & (!is.na(number)))
)
cycles_agg
subdays = days[(days$user_id %in% unique(days$user_id)[1:2]) & (days$cycle_nb %in% 1:3),]
cycles_agg = ddply(subdays, .(cycle_id), summarize,
n_days_obs = lu(date),
last_obs_day = max(cycleday),
n_obs = sum(number * (type == "n_logs"), na.rm = TRUE),
n_days_obs_lut_D = lu(cycleday * (cycleday_m_D %in% c(-par$D : -1))) - 1 ,
n_days_obs_lut_7 = lu(cycleday * (cycleday_m_D %in% c(-7 : -1))) - 1,
n_days_obs_foll_Df = lu(cycleday * (cycleday_m_D %in% c(0:par$Df))) - 1,
n_pill = sum(category == "pill_hbc"),
n_other_BC = sum(category %in% c("patch_hbc","ring_hbc","injection_hbc","iud")) ,
n_tot_sex = sum(type %in% c("withdrawal_sex","protected_sex","unprotected_sex")),
n_prot_sex = sum(type == "protected_sex"),
n_unprot_sex =  sum(type == "unprotected_sex"),
n_withdrawal =  sum(type == "withdrawal_sex"),
n_TB = sum(type == TB),
n_egg_white_fluid = sum(type %in% c("egg_white")),
n_BBT = sum((category == "bbt") & (!is.na(number)))
)
cycles_agg
cycles_agg
subdays
subdays[subdays$type == "n_logs"]
subdays[subdays$type == "n_logs",]
cycles_agg
cycles_agg = ddply(subdays, .(cycle_id), summarize,
n_days_obs = lu(date),
last_obs_day = max(cycleday),
n_obs = sum(number * (type == "n_logs"), na.rm = TRUE),
n_days_obs_lut_D = lu(cycleday * (cycleday_from_end %in% c(-par$D : -1))) - 1 ,
n_days_obs_lut_7 = lu(cycleday * (cycleday_from_end %in% c(-7 : -1))) - 1,
n_days_obs_foll_Df = lu(cycleday * (cycleday %in% c(1:(par$Df+1)))) - 1,
n_pill = sum(category == "pill_hbc"),
n_other_BC = sum(category %in% c("patch_hbc","ring_hbc","injection_hbc","iud")) ,
n_tot_sex = sum(type %in% c("withdrawal_sex","protected_sex","unprotected_sex")),
n_prot_sex = sum(type == "protected_sex"),
n_unprot_sex =  sum(type == "unprotected_sex"),
n_withdrawal =  sum(type == "withdrawal_sex"),
n_TB = sum(type == TB),
n_egg_white_fluid = sum(type %in% c("egg_white")),
n_BBT = sum((category == "bbt") & (!is.na(number)))
)
cycles_agg
subdays[subdays$cycle_id == "0007dcf523910e7b1e2b66c32405ed3f51cd3dfa_2",]
cl = makeCluster(par$n_cores)
registerDoParallel(cl)
cycles_aggregate = foreach(filename = filenames, .combine = rbind) %dopar%
{
cat(filename,"\n")
load(paste0(days_folder, filename), verbose = TRUE)
subdays = days[(days$user_id %in% unique(days$user_id)[1:2]) & (days$cycle_nb %in% 1:3),]
cycles_agg = ddply(subdays, .(cycle_id), summarize,
n_days_obs = lu(date),
last_obs_day = max(cycleday),
n_obs = sum(number * (type == "n_logs"), na.rm = TRUE),
n_days_obs_lut_D = lu(cycleday * (cycleday_from_end %in% c(-par$D : -1))) - 1 ,
n_days_obs_lut_7 = lu(cycleday * (cycleday_from_end %in% c(-7 : -1))) - 1,
n_days_obs_foll_Df = lu(cycleday * (cycleday %in% c(1:(par$Df+1)))) - 1,
n_pill = sum(category == "pill_hbc"),
n_other_BC = sum(category %in% c("patch_hbc","ring_hbc","injection_hbc","iud")) ,
n_tot_sex = sum(type %in% c("withdrawal_sex","protected_sex","unprotected_sex")),
n_prot_sex = sum(type == "protected_sex"),
n_unprot_sex =  sum(type == "unprotected_sex"),
n_withdrawal =  sum(type == "withdrawal_sex"),
n_TB = sum(type == TB),
n_egg_white_fluid = sum(type %in% c("egg_white")),
n_BBT = sum((category == "bbt") & (!is.na(number)))
)
return(cycles_agg)
}
cycles_agg = ddply(subdays, .(cycle_id), summarize,
n_days_obs = lu(date),
last_obs_day = max(cycleday),
n_obs = sum(number * (type == "n_logs"), na.rm = TRUE),
n_days_obs_lut_D = lu(cycleday * (cycleday_from_end %in% c(-par$D : -1))) - 1 ,
n_days_obs_lut_7 = lu(cycleday * (cycleday_from_end %in% c(-7 : -1))) - 1,
n_days_obs_foll_Df = lu(cycleday * (cycleday %in% c(1:(par$Df+1)))) - 1,
n_pill = sum(category == "pill_hbc"),
n_other_BC = sum(category %in% c("patch_hbc","ring_hbc","injection_hbc","iud")) ,
n_tot_sex = sum(type %in% c("withdrawal_sex","protected_sex","unprotected_sex")),
n_prot_sex = sum(type == "protected_sex"),
n_unprot_sex =  sum(type == "unprotected_sex"),
n_withdrawal =  sum(type == "withdrawal_sex"),
n_TB = sum(type == TB),
n_egg_white_fluid = sum(type %in% c("egg_white")),
n_BBT = sum((category == "bbt") & (!is.na(number)))
)
filenames
filenames = filenames[1:2]
filenames
cl = makeCluster(par$n_cores)
registerDoParallel(cl)
cycles_aggregate = foreach(filename = filenames, .combine = rbind) %dopar%
{
cat(filename,"\n")
load(paste0(days_folder, filename), verbose = TRUE)
days = days[(days$user_id %in% unique(days$user_id)[1:2]) & (days$cycle_nb %in% 1:3),]
cycles_agg = ddply(days, .(cycle_id), summarize,
n_days_obs = lu(date),
last_obs_day = max(cycleday),
n_obs = sum(number * (type == "n_logs"), na.rm = TRUE),
n_days_obs_lut_D = lu(cycleday * (cycleday_from_end %in% c(-par$D : -1))) - 1 ,
n_days_obs_lut_7 = lu(cycleday * (cycleday_from_end %in% c(-7 : -1))) - 1,
n_days_obs_foll_Df = lu(cycleday * (cycleday %in% c(1:(par$Df+1)))) - 1,
n_pill = sum(category == "pill_hbc"),
n_other_BC = sum(category %in% c("patch_hbc","ring_hbc","injection_hbc","iud")) ,
n_tot_sex = sum(type %in% c("withdrawal_sex","protected_sex","unprotected_sex")),
n_prot_sex = sum(type == "protected_sex"),
n_unprot_sex =  sum(type == "unprotected_sex"),
n_withdrawal =  sum(type == "withdrawal_sex"),
n_TB = sum(type == TB),
n_egg_white_fluid = sum(type %in% c("egg_white")),
n_BBT = sum((category == "bbt") & (!is.na(number)))
)
return(cycles_agg)
}
cycles_agg = ddply(subdays, .(cycle_id), summarize,
n_days_obs = lu(date),
last_obs_day = max(cycleday),
n_obs = sum(number * (type == "n_logs"), na.rm = TRUE),
n_days_obs_lut_D = lu(cycleday * (cycleday_from_end %in% c(-par$D : -1))) - 1 ,
n_days_obs_lut_7 = lu(cycleday * (cycleday_from_end %in% c(-7 : -1))) - 1,
n_days_obs_foll_Df = lu(cycleday * (cycleday %in% c(1:(par$Df+1)))) - 1,
n_pill = sum(category == "pill_hbc"),
n_other_BC = sum(category %in% c("patch_hbc","ring_hbc","injection_hbc","iud")) ,
n_tot_sex = sum(type %in% c("withdrawal_sex","protected_sex","unprotected_sex")),
n_prot_sex = sum(type == "protected_sex"),
n_unprot_sex =  sum(type == "unprotected_sex"),
n_withdrawal =  sum(type == "withdrawal_sex"),
n_TB = sum(type == TB),
n_egg_white_fluid = sum(type %in% c("egg_white")),
n_BBT = sum((category == "bbt") & (!is.na(number)))
)
cycles_agg
days_full =days
days = days[(days$user_id %in% unique(days$user_id)[1:2]) & (days$cycle_nb %in% 1:3),]
dim(days)
cycles_agg = ddply(days, .(cycle_id), summarize,
n_days_obs = lu(date),
last_obs_day = max(cycleday),
n_obs = sum(number * (type == "n_logs"), na.rm = TRUE),
n_days_obs_lut_D = lu(cycleday * (cycleday_from_end %in% c(-par$D : -1))) - 1 ,
n_days_obs_lut_7 = lu(cycleday * (cycleday_from_end %in% c(-7 : -1))) - 1,
n_days_obs_foll_Df = lu(cycleday * (cycleday %in% c(1:(par$Df+1)))) - 1,
n_pill = sum(category == "pill_hbc"),
n_other_BC = sum(category %in% c("patch_hbc","ring_hbc","injection_hbc","iud")) ,
n_tot_sex = sum(type %in% c("withdrawal_sex","protected_sex","unprotected_sex")),
n_prot_sex = sum(type == "protected_sex"),
n_unprot_sex =  sum(type == "unprotected_sex"),
n_withdrawal =  sum(type == "withdrawal_sex"),
n_TB = sum(type == TB),
n_egg_white_fluid = sum(type %in% c("egg_white")),
n_BBT = sum((category == "bbt") & (!is.na(number)))
)
cycles_aggregate = foreach(filename = filenames, .combine = rbind) %do%
{
cat(filename,"\n")
load(paste0(days_folder, filename), verbose = TRUE)
days = days[(days$user_id %in% unique(days$user_id)[1:2]) & (days$cycle_nb %in% 1:3),]
cycles_agg = ddply(days, .(cycle_id), summarize,
n_days_obs = lu(date),
last_obs_day = max(cycleday),
n_obs = sum(number * (type == "n_logs"), na.rm = TRUE),
n_days_obs_lut_D = lu(cycleday * (cycleday_from_end %in% c(-par$D : -1))) - 1 ,
n_days_obs_lut_7 = lu(cycleday * (cycleday_from_end %in% c(-7 : -1))) - 1,
n_days_obs_foll_Df = lu(cycleday * (cycleday %in% c(1:(par$Df+1)))) - 1,
n_pill = sum(category == "pill_hbc"),
n_other_BC = sum(category %in% c("patch_hbc","ring_hbc","injection_hbc","iud")) ,
n_tot_sex = sum(type %in% c("withdrawal_sex","protected_sex","unprotected_sex")),
n_prot_sex = sum(type == "protected_sex"),
n_unprot_sex =  sum(type == "unprotected_sex"),
n_withdrawal =  sum(type == "withdrawal_sex"),
n_TB = sum(type == TB),
n_egg_white_fluid = sum(type %in% c("egg_white")),
n_BBT = sum((category == "bbt") & (!is.na(number)))
)
return(cycles_agg)
}
cycles_aggregate
