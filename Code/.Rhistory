geom_point(aes(size = -log(p_value)), alpha = 0.3)+
scale_x_continuous(breaks = par$x.axis)+
facet_wrap(input ~ .)+
guides(col = FALSE)
g
g = ggplot(pred[grepl("country",pred$input),], aes(x = cycleday_m_D, y = z_value, col = input)) +
geom_vline(xintercept = 0, size = 2, col = "gray90")+
geom_vline(xintercept = -14, size = 4, col = "gray90", alpha = 0.5)+
geom_hline(yintercept = 0, size = 0.1)+
geom_line() +
geom_point(aes(size = -log(p_value)), alpha = 0.3)+
scale_x_continuous(breaks = par$x.axis)+
facet_wrap(input ~ .)+
guides(col = FALSE)
g
g = ggplot(pred[!grepl("country",pred$input),], aes(x = cycleday_m_D, y = p_value, col = input)) +
geom_vline(xintercept = 0, size = 2, col = "gray90")+
geom_vline(xintercept = -14, size = 4, col = "gray90", alpha = 0.5)+
geom_hline(yintercept = 0, size = 0.1)+
geom_line() +
scale_x_continuous(breaks = par$x.axis)+
facet_wrap(input ~ .)+
guides(col = FALSE)
g
g = ggplot(pred[grepl("country",pred$input),], aes(x = cycleday_m_D, y = p_value, col = input)) +
geom_vline(xintercept = 0, size = 2, col = "gray90")+
geom_vline(xintercept = -14, size = 4, col = "gray90", alpha = 0.5)+
geom_hline(yintercept = 0, size = 0.1)+
geom_line() +
scale_x_continuous(breaks = par$x.axis)+
facet_wrap(input ~ .)+
guides(col = FALSE)
g
pred$q_value = p.adjust(pred$p_value, method = "BH")
g = ggplot(pred[!grepl("country",pred$input),], aes(x = cycleday_m_D,col = input)) +
geom_vline(xintercept = 0, size = 2, col = "gray90")+
geom_vline(xintercept = -14, size = 4, col = "gray90", alpha = 0.5)+
geom_hline(yintercept = 0, size = 0.1)+
geom_line(aes(y = p_value), linetype = 2) +
geom_line(aes(y = q_value)) +
scale_x_continuous(breaks = par$x.axis)+
facet_wrap(input ~ .)+
guides(col = FALSE)
g
g = ggplot(pred[!grepl("country",pred$input),], aes(x = cycleday_m_D,col = input)) +
geom_vline(xintercept = 0, size = 2, col = "gray90")+
geom_vline(xintercept = -14, size = 4, col = "gray90", alpha = 0.5)+
geom_hline(yintercept = 0, size = 0.1)+
geom_line(aes(y = q_value)) +
geom_line(aes(y = p_value), linetype = 2) +
scale_x_continuous(breaks = par$x.axis)+
facet_wrap(input ~ .)+
guides(col = FALSE)
g
g = ggplot(pred[!grepl("country",pred$input),], aes(x = cycleday_m_D,col = input)) +
geom_vline(xintercept = 0, size = 2, col = "gray90")+
geom_vline(xintercept = -14, size = 4, col = "gray90", alpha = 0.5)+
geom_hline(yintercept = 0, size = 0.1)+
geom_line(aes(y = -log(q_value))) +
geom_line(aes(y = -log(p_value)), linetype = 2) +
scale_x_continuous(breaks = par$x.axis)+
facet_wrap(input ~ .)+
guides(col = FALSE)
g
g = ggplot(pred[!grepl("country",pred$input),], aes(x = cycleday_m_D, y = z_value, col = input)) +
geom_vline(xintercept = 0, size = 2, col = "gray90")+
geom_vline(xintercept = -14, size = 4, col = "gray90", alpha = 0.5)+
geom_hline(yintercept = 0, size = 0.1)+
geom_line() +
scale_x_continuous(breaks = par$x.axis)+
facet_wrap(input ~ .)+
guides(col = FALSE)
g
g = ggplot(pred[grepl("country",pred$input),], aes(x = cycleday_m_D, y = z_value, col = input)) +
geom_vline(xintercept = 0, size = 2, col = "gray90")+
geom_vline(xintercept = -14, size = 4, col = "gray90", alpha = 0.5)+
geom_hline(yintercept = 0, size = 0.1)+
geom_line() +
scale_x_continuous(breaks = par$x.axis)+
facet_wrap(input ~ .)+
guides(col = FALSE)
g
g = ggplot(pred[!grepl("country",pred$input),], aes(x = cycleday_m_D,col = input)) +
geom_vline(xintercept = 0, size = 2, col = "gray90")+
geom_vline(xintercept = -14, size = 4, col = "gray90", alpha = 0.5)+
geom_hline(yintercept = 0, size = 0.1)+
geom_line(aes(y = -log(q_value))) +
geom_line(aes(y = -log(p_value)), linetype = 2) +
scale_x_continuous(breaks = par$x.axis)+
facet_wrap(input ~ .)+
guides(col = FALSE)
g
print(summary(mod_d))
paste0("mod_d = glm( round(y) ~ ",paste(inputs, collapse = " + ")," ,
data = d_wide,
family = 'binomial')")
inputs = c("cycle_length","period_length","diff_cl_median_3c","BC","age","height","weight","bmi", "country")
pred = data.frame()
for(d in (-par$D):(par$Df) ){
cat(d,"\n")
eval(parse(text = paste0("d_wide$y = d_wide$day_",ifelse(d<0,"m",""),abs(d))))
eval(parse(text = paste0("mod_d = glm( round(y) ~ ",paste(inputs, collapse = " + ")," ,
data = d_wide,
family = 'binomial')")))
this_day_pred = data.frame(cycleday_m_D = d,
input = names(coef(summary(mod_d))[,1]),
est = coef(summary(mod_d))[,1],
z_value = coef(summary(mod_d))[,3],
p_value = coef(summary(mod_d))[,4]
)
pred = rbind(pred, this_day_pred)
if(d == 0){
print(summary(mod_d))
}
}
pred$q_value = p.adjust(pred$p_value, method = "BH")
g = ggplot(pred[!grepl("country",pred$input),], aes(x = cycleday_m_D, y = z_value, col = input)) +
geom_vline(xintercept = 0, size = 2, col = "gray90")+
geom_vline(xintercept = -14, size = 4, col = "gray90", alpha = 0.5)+
geom_hline(yintercept = 0, size = 0.1)+
geom_line() +
scale_x_continuous(breaks = par$x.axis)+
facet_wrap(input ~ .)+
guides(col = FALSE)
g
g = ggplot(pred[grepl("country",pred$input),], aes(x = cycleday_m_D, y = z_value, col = input)) +
geom_vline(xintercept = 0, size = 2, col = "gray90")+
geom_vline(xintercept = -14, size = 4, col = "gray90", alpha = 0.5)+
geom_hline(yintercept = 0, size = 0.1)+
geom_line() +
scale_x_continuous(breaks = par$x.axis)+
facet_wrap(input ~ .)+
guides(col = FALSE)
g
g = ggplot(pred[!grepl("country",pred$input),], aes(x = cycleday_m_D,col = input)) +
geom_vline(xintercept = 0, size = 2, col = "gray90")+
geom_vline(xintercept = -14, size = 4, col = "gray90", alpha = 0.5)+
geom_hline(yintercept = 0, size = 0.1)+
geom_line(aes(y = -log(q_value))) +
geom_line(aes(y = -log(p_value)), linetype = 2) +
scale_x_continuous(breaks = par$x.axis)+
facet_wrap(input ~ .)+
guides(col = FALSE)
g
head(pred)
rownames(pred) = NA
rownames(pred) = 1:nrow(pred)
head(pred)
head(pred[,-6])
g = ggplot(pred[!grepl("country",pred$input),], aes(x = cycleday_m_D, y = z_value, col = input)) +
geom_vline(xintercept = 0, size = 2, col = "gray90")+
geom_vline(xintercept = -14, size = 4, col = "gray90", alpha = 0.5)+
geom_hline(yintercept = 0, size = 0.1)+
geom_line() +
scale_x_continuous(breaks = par$x.axis)+
facet_wrap(input ~ .)+
guides(col = FALSE)
g
g = ggplot(pred[grepl("country",pred$input),], aes(x = cycleday_m_D, y = z_value, col = input)) +
geom_vline(xintercept = 0, size = 2, col = "gray90")+
geom_vline(xintercept = -14, size = 4, col = "gray90", alpha = 0.5)+
geom_hline(yintercept = 0, size = 0.1)+
geom_line() +
scale_x_continuous(breaks = par$x.axis)+
facet_wrap(input ~ .)+
guides(col = FALSE)
g
g = ggplot(pred[!grepl("country",pred$input),], aes(x = cycleday_m_D,col = input)) +
geom_vline(xintercept = 0, size = 2, col = "gray90")+
geom_vline(xintercept = -14, size = 4, col = "gray90", alpha = 0.5)+
geom_hline(yintercept = 0, size = 0.1)+
geom_line(aes(y = -log(q_value))) +
geom_line(aes(y = -log(p_value)), linetype = 2) +
scale_x_continuous(breaks = par$x.axis)+
facet_wrap(input ~ .)+
guides(col = FALSE)
g
Sys.info()["nodename"]
Sys.info()["nodename"]
Sys.info()
sys_info = Sys.info()
sys_info
names(sys_info)
head(pred)
g = ggplot(pred[!grepl("country",pred$input),], aes(x = cycleday_m_D, y = z_value, col = input)) +
geom_vline(xintercept = 0, size = 2, col = "gray90")+
geom_vline(xintercept = -14, size = 4, col = "gray90", alpha = 0.5)+
geom_hline(yintercept = 0, size = 0.1)+
geom_line() +
scale_x_continuous(breaks = par$x.axis)+
facet_wrap(input ~ .)+
guides(col = FALSE)
g
g = ggplot(pred[grepl("country",pred$input),], aes(x = cycleday_m_D, y = z_value, col = input)) +
geom_vline(xintercept = 0, size = 2, col = "gray90")+
geom_vline(xintercept = -14, size = 4, col = "gray90", alpha = 0.5)+
geom_hline(yintercept = 0, size = 0.1)+
geom_line() +
scale_x_continuous(breaks = par$x.axis)+
facet_wrap(input ~ .)+
guides(col = FALSE)
g
g = ggplot(pred[!grepl("country",pred$input),], aes(x = cycleday_m_D,col = input)) +
geom_vline(xintercept = 0, size = 2, col = "gray90")+
geom_vline(xintercept = -14, size = 4, col = "gray90", alpha = 0.5)+
geom_hline(yintercept = 0, size = 0.1)+
geom_line(aes(y = -log(q_value))) +
geom_line(aes(y = -log(p_value)), linetype = 2) +
scale_x_continuous(breaks = par$x.axis)+
facet_wrap(input ~ .)+
guides(col = FALSE)
g
inputs = c("cycle_length","period_length","diff_cl_median_3c","BC","age","bmi", "country") #"height","weight",
pred = data.frame()
for(d in (-par$D):(par$Df) ){
cat(d,"\n")
eval(parse(text = paste0("d_wide$y = d_wide$day_",ifelse(d<0,"m",""),abs(d))))
eval(parse(text = paste0("mod_d = glm( round(y) ~ ",paste(inputs, collapse = " + ")," ,
data = d_wide,
family = 'binomial')")))
this_day_pred = data.frame(cycleday_m_D = d,
input = names(coef(summary(mod_d))[,1]),
est = coef(summary(mod_d))[,1],
z_value = coef(summary(mod_d))[,3],
p_value = coef(summary(mod_d))[,4]
)
pred = rbind(pred, this_day_pred)
if(d == 0){
mod_d_0 = mod_d
print(summary(mod_d))
}
}
rownames(pred) = 1:nrow(pred)
pred$q_value = p.adjust(pred$p_value, method = "BH")
g = ggplot(pred[!grepl("country",pred$input),], aes(x = cycleday_m_D, y = z_value, col = input)) +
geom_vline(xintercept = 0, size = 2, col = "gray90")+
geom_vline(xintercept = -14, size = 4, col = "gray90", alpha = 0.5)+
geom_hline(yintercept = 0, size = 0.1)+
geom_line() +
scale_x_continuous(breaks = par$x.axis)+
facet_wrap(input ~ .)+
guides(col = FALSE)
g
g = ggplot(pred[grepl("country",pred$input),], aes(x = cycleday_m_D, y = z_value, col = input)) +
geom_vline(xintercept = 0, size = 2, col = "gray90")+
geom_vline(xintercept = -14, size = 4, col = "gray90", alpha = 0.5)+
geom_hline(yintercept = 0, size = 0.1)+
geom_line() +
scale_x_continuous(breaks = par$x.axis)+
facet_wrap(input ~ .)+
guides(col = FALSE)
g
g = ggplot(pred[!grepl("country",pred$input),], aes(x = cycleday_m_D,col = input)) +
geom_vline(xintercept = 0, size = 2, col = "gray90")+
geom_vline(xintercept = -14, size = 4, col = "gray90", alpha = 0.5)+
geom_hline(yintercept = 0, size = 0.1)+
geom_line(aes(y = -log(q_value))) +
geom_line(aes(y = -log(p_value)), linetype = 2) +
scale_x_continuous(breaks = par$x.axis)+
facet_wrap(input ~ .)+
guides(col = FALSE)
g
signal_ts = ts(signal, frequency = 1)
knitr::opts_chunk$set(echo = TRUE, cache = TRUE)
source("Scripts/00_setup.R")
load(paste0(IO$tmp_kindara, "sk1.Rdata"), verbose = TRUE)
g = ggplot(sk1, aes(x = date, y = tot_sex)) + geom_line()
g
s = reshape(sk1, varying = list(4:ncol(sk1)), idvar = c("date","n_cycles","n_obs"), direction = "long")
s$time = colnames(sk1)[4:ncol(sk1)][s$time]
colnames(s) = c("date","n_cycles","n_obs","indicator","value")
g = ggplot(s[grep("sex",s$indicator),], aes(x = date, y = value/n_cycles, col = indicator))
g + geom_line() + ggtitle("Sexual frequency (#/number of cycles)")
g = ggplot(s[grep("sex",s$indicator),], aes(x = date, y = value/n_obs, col = indicator))
g + geom_line() + ggtitle("Sexual frequency (#/number of observations on that day)")
s$n_indicator  = s$value/s$n_obs
s$n_indicator  = s$value/s$n_cycles
signal = s$n_indicator[(s$indicator == "unprot_sex")]
time = par$time_num
seasonal_analysis = detect_seasonal_pattern(time = time, signal = signal, title = "unprot_sex Kindara", remove_weekly_patterns = FALSE)
seasonal_analysis = detect_seasonal_pattern(time = time, signal = signal, title = "unprot_sex Kindara", remove_weekly_patterns = TRUE)
signal = s$n_indicator[s$indicator == "prot_sex"]
time = par$time_num
seasonal_analysis = detect_seasonal_pattern(time = time, signal = signal, title = "prot_sex Kindara", remove_weekly_patterns = FALSE)
seasonal_analysis = detect_seasonal_pattern(time = time, signal = signal, title = "prot_sex Kindara", remove_weekly_patterns = TRUE)
signal = s$n_indicator[s$indicator == "tot_sex"]
time = par$time_num - 1
plot(time, signal, type = "l")
seasonal_analysis = detect_seasonal_pattern(time = time, signal = signal, title = "tot_sex Kindara", remove_weekly_patterns = FALSE)
seasonal_analysis = detect_seasonal_pattern(time = time, signal = signal, title = "tot_sex Kindara", remove_weekly_patterns = TRUE)
signal_ts = ts(signal, frequency = 1)
unsmoothed_signal = signal
#signal = smooth.spline(rep(signal,3), df = 3*length(signal))$y[(length(signal)+1):(2*length(signal))]
signal = smooth.spline(unsmoothed_signal, df = 100)$y
plot(time, unsmoothed_signal, type = "l")
points(time, signal, type = "l", lwd = 2, col = "blue")
seasonal_analysis = detect_seasonal_pattern(time = time, signal = signal, title = "tot_sex Kindara")
?stl
stl_ts = stl(signal_ts, s.window = "periodic")
signal_ts = ts(signal, frequency = length(signal)/3)
stl_ts = stl(signal_ts, s.window = "periodic")
plot(stl_ts)
signal = s$n_indicator[s$indicator == "tot_sex"]
time = par$time_num - 1
plot(time, signal, type = "l")
signal_ts = ts(signal, frequency = length(signal)/3)
stl_ts = stl(signal_ts, s.window = "periodic")
plot(stl_ts)
?ts
length(signal)/3
plot(signal_ts)
stl_ts = stl(signal_ts, s.window = "periodic")
plot(stl_ts)
?stl
signal_ts = ts(signal, frequency = 7)
plot(signal_ts)
stl_ts = stl(signal_ts, s.window = "periodic")
plot(stl_ts)
signal_ts = ts(signal, frequency = 7)
plot(signal_ts)
stl_ts = stl(signal_ts, s.window = "periodic")
plot(stl_ts)
stl_ts$time.series[1:10,]
signal_ts_no_weekly = ts(apply((stl_ts$time.series[,2:3]),1,sum), frequency = length(signal)/3)
plot(signal_ts_no_weekly)
stl_ts = stl(signal_ts_no_weekly, s.window = "periodic")
plot(stl_ts)
frequency = length(signal)/3
frequency = length(signal)/3
length(signal)/3
signal_ts = ts(signal, frequency = 7)
plot(signal_ts)
stl_ts = stl(signal_ts, s.window = "periodic")
plot(stl_ts)
signal_ts_no_weekly = ts(apply((stl_ts$time.series[,2:3]),1,sum), frequency = length(signal)/3)
plot(signal_ts_no_weekly)
stl_ts = stl(signal_ts_no_weekly, s.window = "periodic")
plot(stl_ts)
apply((stl_ts$time.series[,2:3]),1,sum)
plot(apply((stl_ts$time.series[,2:3]),1,sum))
plot(apply((stl_ts$time.series[,2:3]),1,sum), lty = "l")
plot(apply((stl_ts$time.series[,2:3]),1,sum), type = "l")
signal_ts = ts(signal, frequency = 7)
plot(signal_ts)
stl_ts = stl(signal_ts, s.window = "periodic")
plot(stl_ts)
signal_ts = ts(signal, frequency = 7)
plot(signal_ts)
stl_ts = stl(signal_ts, s.window = "periodic")
plot(stl_ts)
?stl
signal_ts_no_weekly = ts(apply((stl_ts$time.series[,2:3]),1,sum), frequency = length(signal)/3)
plot(signal_ts_no_weekly)
stl_ts = stl(signal_ts_no_weekly, s.window = "periodic", s.degree = 0)
plot(stl_ts)
# weekly period
signal_ts = ts(signal, frequency = 7)
plot(signal_ts)
stl_ts = stl(signal_ts, s.window = "periodic")
plot(stl_ts)
# yearly period
signal_ts_no_weekly = ts(apply((stl_ts$time.series[,2:3]),1,sum), frequency = length(signal)/3)
plot(signal_ts_no_weekly)
stl_ts = stl(signal_ts_no_weekly, s.window = "periodic", s.degree = 0)
plot(stl_ts)
# weekly period
signal_ts = ts(signal, frequency = 7)
plot(signal_ts)
stl_ts = stl(signal_ts, s.window = "periodic")
plot(stl_ts)
# yearly period
signal_ts_no_weekly = ts(apply((stl_ts$time.series[,2:3]),1,sum), frequency = length(signal)/3)
plot(signal_ts_no_weekly)
stl_ts = stl(signal_ts_no_weekly, s.window = "periodic", s.degree = 1)
plot(stl_ts)
# weekly period
signal_ts = ts(signal, frequency = 7)
plot(signal_ts)
stl_ts = stl(signal_ts, s.window = "periodic")
plot(stl_ts)
# yearly period
signal_ts_no_weekly = ts(apply((stl_ts$time.series[,2:3]),1,sum), frequency = length(signal)/3)
plot(signal_ts_no_weekly)
stl_ts = stl(signal_ts_no_weekly, s.window = "periodic", l.window = 3)
plot(stl_ts)
# weekly period
signal_ts = ts(signal, frequency = 7)
plot(signal_ts)
stl_ts = stl(signal_ts, s.window = "periodic")
plot(stl_ts)
# yearly period
signal_ts_no_weekly = ts(apply((stl_ts$time.series[,2:3]),1,sum), frequency = length(signal)/3)
plot(signal_ts_no_weekly)
stl_ts = stl(signal_ts_no_weekly, s.window = "periodic", l.degree = 1)
plot(stl_ts)
# weekly period
signal_ts = ts(signal, frequency = 7)
plot(signal_ts)
stl_ts = stl(signal_ts, s.window = "periodic")
plot(stl_ts)
# yearly period
signal_ts_no_weekly = ts(apply((stl_ts$time.series[,2:3]),1,sum), frequency = length(signal)/3)
plot(signal_ts_no_weekly)
stl_ts = stl(signal_ts_no_weekly, s.window = "periodic", robuts = TRUE)
# weekly period
signal_ts = ts(signal, frequency = 7)
plot(signal_ts)
stl_ts = stl(signal_ts, s.window = "periodic")
plot(stl_ts)
# yearly period
signal_ts_no_weekly = ts(apply((stl_ts$time.series[,2:3]),1,sum), frequency = length(signal)/3)
plot(signal_ts_no_weekly)
stl_ts = stl(signal_ts_no_weekly, s.window = "periodic", robust = TRUE)
plot(stl_ts)
# weekly period
signal_ts = ts(signal, frequency = 7)
plot(signal_ts)
stl_ts = stl(signal_ts, s.window = "periodic")
plot(stl_ts)
# yearly period
signal_ts_no_weekly = ts(apply((stl_ts$time.series[,2:3]),1,sum), frequency = length(signal)/3)
plot(signal_ts_no_weekly)
stl_ts = stl(signal_ts_no_weekly, s.window = "periodic")
plot(stl_ts)
# yearly period
signal_ts_no_weekly = ts(apply((stl_ts$time.series[,2:3]),1,sum), frequency = 3/length(signal))
plot(signal_ts_no_weekly)
stl_ts = stl(signal_ts_no_weekly, s.window = "periodic")
# weekly period
signal_ts = ts(signal, frequency = 7)
plot(signal_ts)
stl_ts = stl(signal_ts, s.window = "periodic")
plot(stl_ts)
# yearly period
signal_ts_no_weekly = ts(apply((stl_ts$time.series[,2:3]),1,sum), frequency = length(signal)/3)
plot(signal_ts_no_weekly)
stl_ts = stl(signal_ts_no_weekly, s.window = "periodic")
plot(stl_ts)
length(signal)
length(signal)/3
# weekly period
signal_ts = ts(signal, frequency = 7)
plot(signal_ts)
stl_ts = stl(signal_ts, s.window = "periodic")
plot(stl_ts)
# yearly period
signal_ts_no_weekly = ts(apply((stl_ts$time.series[,2:3]),1,sum), frequency = length(signal)/6)
plot(signal_ts_no_weekly)
stl_ts = stl(signal_ts_no_weekly, s.window = "periodic")
plot(stl_ts)
# weekly period
signal_ts = ts(signal, frequency = 7)
plot(signal_ts)
stl_ts = stl(signal_ts, s.window = "periodic")
plot(stl_ts)
# yearly period
signal_ts_no_weekly = ts(apply((stl_ts$time.series[,2:3]),1,sum), frequency = length(signal)/3)
plot(signal_ts_no_weekly)
stl_ts = stl(signal_ts_no_weekly, s.window = "periodic")
plot(stl_ts)
# bi-annual period
signal_ts_no_weekly = ts(apply((stl_ts$time.series[,2:3]),1,sum), frequency = length(signal)/6)
plot(signal_ts_no_weekly)
stl_ts = stl(signal_ts_no_weekly, s.window = "periodic")
plot(stl_ts)
# weekly period
signal_ts = ts(signal, frequency = 7)
stl_ts = stl(signal_ts, s.window = "periodic")
plot(stl_ts)
# yearly period
signal_ts_no_weekly = ts(apply((stl_ts$time.series[,2:3]),1,sum), frequency = length(signal)/3)
stl_ts = stl(signal_ts_no_weekly, s.window = "periodic")
plot(stl_ts)
# bi-annual period
signal_ts_no_weekly = ts(apply((stl_ts$time.series[,2:3]),1,sum), frequency = length(signal)/6)
stl_ts = stl(signal_ts_no_weekly, s.window = "periodic")
plot(stl_ts)
# weekly period
signal_ts = ts(signal, frequency = 7)
stl_w = stl(signal_ts, s.window = "periodic")
plot(stl_w)
# yearly period
signal_ts_no_weekly = ts(apply((stl_w$time.series[,2:3]),1,sum), frequency = length(signal)/3)
stl_y = stl(signal_ts_no_weekly, s.window = "periodic")
plot(stl_y)
# bi-annual period
signal_ts_no_weekly = ts(apply((stl_w$time.series[,2:3]),1,sum), frequency = length(signal)/6)
stl_ba = stl(signal_ts_no_weekly, s.window = "periodic")
plot(stl_ba)
signal_ts = ts(signal, frequency = length(signal)/3)
stl_y = stl(signal_ts, s.window = "periodic")
plot(stl_y)
signal_ts = ts(signal, frequency = length(signal)/3)
stl_d = stl(signal_ts, s.window = "periodic")
plot(stl_d)
signal_detrended = ts(apply((stl_d$time.series[,2:3]),1,sum), frequency = 7)
stl_w = stl(signal_detrended, s.window = "periodic")
plot(stl_w)
signal_ts_no_weekly = ts(apply((stl_w$time.series[,2:3]),1,sum), frequency = length(signal)/3)
stl_y = stl(signal_ts_no_weekly, s.window = "periodic")
plot(stl_y)
signal_ts = ts(signal, frequency = length(signal)/3)
stl_d = stl(signal_ts, s.window = "periodic")
plot(stl_d)
# weekly period
signal_detrended = ts(apply((stl_d$time.series[,2:3]),1,sum), frequency = 7)
stl_w = stl(signal_detrended, s.window = "periodic")
plot(stl_w)
signal_ts = ts(signal, frequency =  length(signal)/3)
decompose_y = decompose(signal_ts)
plot(decompose_y)
?decompose
